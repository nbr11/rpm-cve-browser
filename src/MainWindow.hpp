#ifndef MAINWINDOW_HPP
#define MAINWINDOW_HPP

#include <QMainWindow>

class QListWidgetItem;
class QSignalMapper;
class QSortFilterProxyModel;
class QStandardItem;
class QStandardItemModel;
class QTimer;

class PackageListGenerator;

namespace Ui {
class MainWindow;
}

class MainWindow : public QMainWindow
{
    Q_OBJECT

public:
    explicit MainWindow(QWidget *parent = 0);
    ~MainWindow();

public:

signals:
    void startListGenerator();

public slots:
    void regeneratePackageList();
    void addListItem(QString item);

    void packageListGenStarted();
    void packageListGenStopped();

    void incrementProgressCount();
    void decrementProgressCount();


private slots:
    void onItemChanged(QStandardItem* pItem);

    // Must be called by a QProcess
    void changeLogRetrieved();

    void sortTable(int column, Qt::SortOrder order);

    void itemClicked(const QModelIndex & Index);

    // Must be called by a QProcess
    void packageInfoRetrieved();

private:
    Ui::MainWindow *m_pUi;
    QStandardItemModel * const m_pPackageListModel;
    QStandardItemModel * const m_pCVETableModel;

    QSortFilterProxyModel * m_pCVEFilter;

    PackageListGenerator * const m_pListGenerator;

    QStringList m_PackageItemsToAdd;

    int m_progressCount;
};

#endif // MAINWINDOW_HPP
